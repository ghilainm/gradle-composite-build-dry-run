import java.nio.file.Files
import java.nio.file.StandardCopyOption

group = "my.group"
version = "1.0.0-SNAPSHOT"

configurations {
    whatever
}

dependencies {
    whatever "my.group:A:1.0.0-SNAPSHOT"
}

// Not working... file not found
task unzipWhateverDependencies(type: Copy) {
    dependsOn configurations.whatever
    from configurations.whatever.fileCollection()
    into project.buildDir
    doLast {
        println "I have finished my execution"
        configurations.whatever.fileCollection().each {
            println "Found that while unzipping : "+it
        }
    }
}

// Manual copy -> working
tasks.register("manualCopy") {
    dependsOn configurations.whatever
    inputs.files(configurations.whatever)
    outputs.dir(project.buildDir.toPath().resolve("jars"))
    doLast {
        println "Starting manual copy"
        configurations.whatever.files.each {
            Files.copy(it.toPath(), project.buildDir.toPath().resolve("jars").resolve(it.name), StandardCopyOption.REPLACE_EXISTING)
        }
    }
}

// Other way of COpy
tasks.register("copyUsingCopyTask", Copy) {
    dependsOn configurations.whatever
    from configurations.whatever
    into project.buildDir
    doLast {
        println "I have finished my execution"
        configurations.whatever.fileCollection().each {
            println "Found that while unzipping : "+it
        }
    }
}

tasks.register("build"){
    dependsOn("copyUsingCopyTask")
}

tasks.register("clean") {
    doLast {
        println "deleting "+buildDir.getAbsolutePath()
        buildDir.delete()
    }
}

tasks.register("printDependencies") {
    doLast {
        configurations.whatever.files.each {
            println "Found one dependency in whatever!"
            println it
        }
    }
}
